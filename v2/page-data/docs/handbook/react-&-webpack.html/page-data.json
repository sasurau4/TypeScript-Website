{"componentChunkName":"component---src-templates-handbook-tsx","path":"/docs/handbook/react-&-webpack.html","webpackCompilationHash":"9ba7cceb403e6d704a1e","result":{"data":{"markdownRemark":{"id":"4cf38c8d-b029-5ffa-bb52-281cf7bc7f2e","excerpt":"{% raw %}This guide will teach you how to wire up TypeScript with React and webpack. If you’re starting a brand new project, take a look at the React Quick…","html":"<p>{% raw %}This guide will teach you how to wire up TypeScript with <a href=\"https://reactjs.org/\">React</a> and <a href=\"https://webpack.js.org/\">webpack</a>.</p>\n<p>If you’re starting a brand new project, take a look at the <a href=\"/samples/index.html\">React Quick Start guide</a> first.</p>\n<p>Otherwise, we assume that you’re already using <a href=\"https://nodejs.org/\">Node.js</a> with <a href=\"https://www.npmjs.com/\">npm</a>.</p>\n<h1>Lay out the project</h1>\n<p>Let’s start out with a new directory.\nWe’ll name it <code class=\"language-text\">proj</code> for now, but you can change it to whatever you want.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">mkdir</span> proj\n<span class=\"token builtin class-name\">cd</span> proj</code></pre></div>\n<p>To start, we’re going to structure our project in the following way:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">proj/\n├─ dist/\n└─ src/\n   └─ components/</code></pre></div>\n<p>TypeScript files will start out in your <code class=\"language-text\">src</code> folder, run through the TypeScript compiler, then webpack, and end up in a <code class=\"language-text\">main.js</code> file in <code class=\"language-text\">dist</code>.\nAny components that we write will go in the <code class=\"language-text\">src/components</code> folder.</p>\n<p>Let’s scaffold this out:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">mkdir</span> src\n<span class=\"token builtin class-name\">cd</span> src\n<span class=\"token function\">mkdir</span> components\n<span class=\"token builtin class-name\">cd</span> <span class=\"token punctuation\">..</span></code></pre></div>\n<p>Webpack will eventually generate the <code class=\"language-text\">dist</code> directory for us.</p>\n<h1>Initialize the project</h1>\n<p>Now we’ll turn this folder into an npm package.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">npm</span> init -y</code></pre></div>\n<p>This creates a <code class=\"language-text\">package.json</code> file with default values.</p>\n<h1>Install our dependencies</h1>\n<p>First ensure Webpack is installed.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save-dev webpack webpack-cli</code></pre></div>\n<p>Webpack is a tool that will bundle your code and optionally all of its dependencies into a single <code class=\"language-text\">.js</code> file.</p>\n<p>Let’s now add React and React-DOM, along with their declaration files, as dependencies to your <code class=\"language-text\">package.json</code> file:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save react react-dom\n<span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save-dev @types/react @types/react-dom</code></pre></div>\n<p>That <code class=\"language-text\">@types/</code> prefix means that we also want to get the declaration files for React and React-DOM.\nUsually when you import a path like <code class=\"language-text\">&quot;react&quot;</code>, it will look inside of the <code class=\"language-text\">react</code> package itself;\nhowever, not all packages include declaration files, so TypeScript also looks in the <code class=\"language-text\">@types/react</code> package as well.\nYou’ll see that we won’t even have to think about this later on.</p>\n<p>Next, we’ll add development-time dependencies on the <a href=\"https://www.npmjs.com/package/ts-loader\">ts-loader</a> and <a href=\"https://www.npmjs.com/package/source-map-loader\">source-map-loader</a>.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save-dev typescript ts-loader source-map-loader</code></pre></div>\n<p>Both of these dependencies will let TypeScript and webpack play well together.\nts-loader helps Webpack compile your TypeScript code using the TypeScript’s standard configuration file named <code class=\"language-text\">tsconfig.json</code>.\nsource-map-loader uses any sourcemap outputs from TypeScript to inform webpack when generating <em>its own</em> sourcemaps.\nThis will allow you to debug your final output file as if you were debugging your original TypeScript source code.</p>\n<p>Please note that ts-loader is not the only loader for typescript.\nYou could instead use <a href=\"https://www.npmjs.com/package/awesome-typescript-loader\">awesome-typescript-loader</a>.</p>\n<p>Read about the differences between them <a href=\"https://github.com/s-panferov/awesome-typescript-loader#differences-between-ts-loader\">here</a>.</p>\n<p>Notice that we installed TypeScript as a development dependency.\nWe could also have linked TypeScript to a global copy with <code class=\"language-text\">npm link typescript</code>, but this is a less common scenario.</p>\n<h1>Add a TypeScript configuration file</h1>\n<p>You’ll want to bring your TypeScript files together - both the code you’ll be writing as well as any necessary declaration files.</p>\n<p>To do this, you’ll need to create a <code class=\"language-text\">tsconfig.json</code> which contains a list of your input files as well as all your compilation settings.\nSimply create a new file in your project root named <code class=\"language-text\">tsconfig.json</code> and fill it with the following contents:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"compilerOptions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"outDir\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"./dist/\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"sourceMap\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"noImplicitAny\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"module\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"commonjs\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"es6\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"jsx\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"react\"</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>You can learn more about <code class=\"language-text\">tsconfig.json</code> files <a href=\"/37e6f7773848b643f688672d80d461f7/tsconfig.json.md\">here</a>.</p>\n<h1>Write some code</h1>\n<p>Let’s write our first TypeScript file using React.\nFirst, create a file named <code class=\"language-text\">Hello.tsx</code> in <code class=\"language-text\">src/components</code> and write the following:</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">HelloProps</span> <span class=\"token punctuation\">{</span> compiler<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span> framework<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Hello</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">props<span class=\"token punctuation\">:</span> HelloProps</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span>Hello <span class=\"token keyword\">from</span> <span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>compiler<span class=\"token punctuation\">}</span> and <span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>framework<span class=\"token punctuation\">}</span><span class=\"token operator\">!</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Note that while this example uses <a href=\"https://reactjs.org/docs/components-and-props.html#functional-and-class-components\">function components</a>, we could also make our example a little <em>classier</em> as well.</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">interface</span> <span class=\"token class-name\">HelloProps</span> <span class=\"token punctuation\">{</span> compiler<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span> framework<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 'HelloProps' describes the shape of props.</span>\n<span class=\"token comment\">// State is never set so we use the '{}' type.</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Hello</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span><span class=\"token operator\">&lt;</span>HelloProps<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span>Hello <span class=\"token keyword\">from</span> <span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>compiler<span class=\"token punctuation\">}</span> and <span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>framework<span class=\"token punctuation\">}</span><span class=\"token operator\">!</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Next, let’s create an <code class=\"language-text\">index.tsx</code> in <code class=\"language-text\">src</code> with the following source:</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">as</span> ReactDOM <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-dom\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Hello <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"./components/Hello\"</span><span class=\"token punctuation\">;</span>\n\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>Hello compiler<span class=\"token operator\">=</span><span class=\"token string\">\"TypeScript\"</span> framework<span class=\"token operator\">=</span><span class=\"token string\">\"React\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n    document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"example\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>We just imported our <code class=\"language-text\">Hello</code> component into <code class=\"language-text\">index.tsx</code>.\nNotice that unlike with <code class=\"language-text\">&quot;react&quot;</code> or <code class=\"language-text\">&quot;react-dom&quot;</code>, we used a <em>relative path</em> to <code class=\"language-text\">Hello.tsx</code> - this is important.\nIf we hadn’t, TypeScript would’ve instead tried looking in our <code class=\"language-text\">node_modules</code> folder.</p>\n<p>We’ll also need a page to display our <code class=\"language-text\">Hello</code> component.\nCreate a file at the root of <code class=\"language-text\">proj</code> named <code class=\"language-text\">index.html</code> with the following contents:</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token doctype\">&lt;!DOCTYPE html></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>UTF-8<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>Hello React!<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>example<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n\n        <span class=\"token comment\">&lt;!-- Dependencies --></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>./node_modules/react/umd/react.development.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>./node_modules/react-dom/umd/react-dom.development.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n\n        <span class=\"token comment\">&lt;!-- Main --></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>./dist/main.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>Notice that we’re including files from within <code class=\"language-text\">node_modules</code>.\nReact and React-DOM’s npm packages include standalone <code class=\"language-text\">.js</code> files that you can include in a web page, and we’re referencing them directly to get things moving faster.\nFeel free to copy these files to another directory, or alternatively, host them on a content delivery network (CDN).\nFacebook makes CDN-hosted versions of React available, and you can <a href=\"http://facebook.github.io/react/downloads.html#development-vs.-production-builds\">read more about that here</a>.</p>\n<h1>Create a webpack configuration file</h1>\n<p>Create a <code class=\"language-text\">webpack.config.js</code> file at the root of the project directory.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">module<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    mode<span class=\"token punctuation\">:</span> <span class=\"token string\">\"production\"</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token comment\">// Enable sourcemaps for debugging webpack's output.</span>\n    devtool<span class=\"token punctuation\">:</span> <span class=\"token string\">\"source-map\"</span><span class=\"token punctuation\">,</span>\n\n    resolve<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// Add '.ts' and '.tsx' as resolvable extensions.</span>\n        extensions<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\".ts\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\".tsx\"</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n    module<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        rules<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n            <span class=\"token punctuation\">{</span>\n                test<span class=\"token punctuation\">:</span> <span class=\"token regex\">/\\.ts(x?)$/</span><span class=\"token punctuation\">,</span>\n                exclude<span class=\"token punctuation\">:</span> <span class=\"token regex\">/node_modules/</span><span class=\"token punctuation\">,</span>\n                use<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>\n                    <span class=\"token punctuation\">{</span>\n                        loader<span class=\"token punctuation\">:</span> <span class=\"token string\">\"ts-loader\"</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">]</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n            <span class=\"token comment\">// All output '.js' files will have any sourcemaps re-processed by 'source-map-loader'.</span>\n            <span class=\"token punctuation\">{</span>\n                enforce<span class=\"token punctuation\">:</span> <span class=\"token string\">\"pre\"</span><span class=\"token punctuation\">,</span>\n                test<span class=\"token punctuation\">:</span> <span class=\"token regex\">/\\.js$/</span><span class=\"token punctuation\">,</span>\n                loader<span class=\"token punctuation\">:</span> <span class=\"token string\">\"source-map-loader\"</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\n    <span class=\"token comment\">// When importing a module whose path matches one of the following, just</span>\n    <span class=\"token comment\">// assume a corresponding global variable exists and use that instead.</span>\n    <span class=\"token comment\">// This is important because it allows us to avoid bundling all of our</span>\n    <span class=\"token comment\">// dependencies, which allows browsers to cache those libraries between builds.</span>\n    externals<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"React\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"react-dom\"</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"ReactDOM\"</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>You might be wondering about that <code class=\"language-text\">externals</code> field.\nWe want to avoid bundling all of React into the same file, since this increases compilation time and browsers will typically be able to cache a library if it doesn’t change.</p>\n<p>Ideally, we’d just import the React module from within the browser, but most browsers still don’t quite support modules yet.\nInstead libraries have traditionally made themselves available using a single global variable like <code class=\"language-text\">jQuery</code> or <code class=\"language-text\">_</code>.\nThis is called the “namespace pattern”, and webpack allows us to continue leveraging libraries written that way.\nWith our entry for <code class=\"language-text\">&quot;react&quot;: &quot;React&quot;</code>, webpack will work its magic to make any import of <code class=\"language-text\">&quot;react&quot;</code> load from the <code class=\"language-text\">React</code> variable.</p>\n<p>You can learn more about configuring webpack <a href=\"https://webpack.js.org/concepts\">here</a>.</p>\n<h1>Putting it all together</h1>\n<p>Just run:</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">npx webpack</code></pre></div>\n<p>Now open up <code class=\"language-text\">index.html</code> in your favorite browser and everything should be ready to use!\nYou should see a page that says “Hello from TypeScript and React!”</p>\n<p>{% endraw %}</p>","frontmatter":{"permalink":"/docs/handbook/react-&-webpack.html"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/docs/handbook/react-&-webpack.html","isOldHandbook":true}}}