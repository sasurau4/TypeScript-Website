{"componentChunkName":"component---src-templates-handbook-tsx","path":"/docs/handbook/declaration-files/templates/global-plugin-d-ts.html","result":{"data":{"markdownRemark":{"id":"4d0d00f4-496b-52db-9934-4d24d2da1cd2","excerpt":"","html":"<pre class=\"shiki\"><div class=\"language-id\">ts</div><div class='code-container'><code><span style=\"color: #008000\">// Type definitions for [~THE LIBRARY NAME~] [~OPTIONAL VERSION NUMBER~]</span>\n<span style=\"color: #008000\">// Project: [~THE PROJECT NAME~]</span>\n<span style=\"color: #008000\">// Definitions by: [~YOUR NAME~] &lt;[~A URL FOR YOU~]&gt;</span>\n\n<span style=\"color: #008000\">/*~ This template shows how to write a global plugin. */</span>\n\n<span style=\"color: #008000\">/*~ Write a declaration for the original type and add new members.</span>\n<span style=\"color: #008000\"> *~ For example, this adds a 'toBinaryString' method with overloads to</span>\n<span style=\"color: #008000\"> *~ the built-in number type.</span>\n<span style=\"color: #008000\"> */</span>\n<span style=\"color: #0000FF\">interface</span><span style=\"color: #000000\"> Number {</span>\n<span style=\"color: #000000\">    toBinaryString(opts?: MyLibrary.BinaryFormatOptions): string;</span>\n<span style=\"color: #000000\">    toBinaryString(callback: MyLibrary.BinaryFormatCallback, opts?: MyLibrary.BinaryFormatOptions): string;</span>\n<span style=\"color: #000000\">}</span>\n\n<span style=\"color: #008000\">/*~ If you need to declare several types, place them inside a namespace</span>\n<span style=\"color: #008000\"> *~ to avoid adding too many things to the global namespace.</span>\n<span style=\"color: #008000\"> */</span>\n<span style=\"color: #0000FF\">declare</span><span style=\"color: #000000\"> </span><span style=\"color: #0000FF\">namespace</span><span style=\"color: #000000\"> MyLibrary {</span>\n<span style=\"color: #000000\">    </span><span style=\"color: #0000FF\">type</span><span style=\"color: #000000\"> BinaryFormatCallback = (n: number) </span><span style=\"color: #0000FF\">=&gt;</span><span style=\"color: #000000\"> string;</span>\n<span style=\"color: #000000\">    </span><span style=\"color: #0000FF\">interface</span><span style=\"color: #000000\"> BinaryFormatOptions {</span>\n<span style=\"color: #000000\">        prefix?: string;</span>\n<span style=\"color: #000000\">        padding: number;</span>\n<span style=\"color: #000000\">    }</span>\n<span style=\"color: #000000\">}</span></code></div></pre>","headings":[],"frontmatter":{"permalink":"/docs/handbook/declaration-files/templates/global-plugin-d-ts.html","title":"global-plugin.d.ts"}}},"pageContext":{"slug":"/docs/handbook/declaration-files/templates/global-plugin-d-ts.html","isOldHandbook":true}}}