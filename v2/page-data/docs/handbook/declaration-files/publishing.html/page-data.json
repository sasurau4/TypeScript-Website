{"componentChunkName":"component---src-templates-handbook-tsx","path":"/docs/handbook/declaration-files/publishing.html","webpackCompilationHash":"9ba7cceb403e6d704a1e","result":{"data":{"markdownRemark":{"id":"001119b2-3b5a-5352-9b4c-c3c0ec81f150","excerpt":"{% raw %}Now that you have authored a declaration file following the steps of this guide, it is time to publish it to npm.\nThere are two main ways you can…","html":"<p>{% raw %}Now that you have authored a declaration file following the steps of this guide, it is time to publish it to npm.\nThere are two main ways you can publish your declaration files to npm:</p>\n<ol>\n<li>bundling with your npm package, or</li>\n<li>publishing to the <a href=\"https://www.npmjs.com/~types\">@types organization</a> on npm.</li>\n</ol>\n<p>If your package is written in TypeScript then the first approach is favored.\nUse the <code class=\"language-text\">--declaration</code> flag to generate declaration files.\nThis way, your declarations and JavaScript will always be in sync.</p>\n<p>If your package is not written in TypeScript then the second is the preferred approach.</p>\n<h1>Including declarations in your npm package</h1>\n<p>If your package has a main <code class=\"language-text\">.js</code> file, you will need to indicate the main declaration file in your <code class=\"language-text\">package.json</code> file as well.\nSet the <code class=\"language-text\">types</code> property to point to your bundled declaration file.\nFor example:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"awesome\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"author\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Vandelay Industries\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"1.0.0\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"main\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"./lib/main.js\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"types\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"./lib/main.d.ts\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Note that the <code class=\"language-text\">&quot;typings&quot;</code> field is synonymous with <code class=\"language-text\">&quot;types&quot;</code>, and could be used as well.</p>\n<p>Also note that if your main declaration file is named <code class=\"language-text\">index.d.ts</code> and lives at the root of the package (next to <code class=\"language-text\">index.js</code>) you do not need to mark the <code class=\"language-text\">&quot;types&quot;</code> property, though it is advisable to do so.</p>\n<h2>Dependencies</h2>\n<p>All dependencies are managed by npm.\nMake sure all the declaration packages you depend on are marked appropriately in the <code class=\"language-text\">&quot;dependencies&quot;</code> section in your <code class=\"language-text\">package.json</code>.\nFor example, imagine we authored a package that used Browserify and TypeScript.</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"name\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"browserify-typescript-extension\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"author\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Vandelay Industries\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"version\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"1.0.0\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"main\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"./lib/main.js\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"types\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"./lib/main.d.ts\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"dependencies\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"browserify\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"latest\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"@types/browserify\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"latest\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"typescript\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"next\"</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Here, our package depends on the <code class=\"language-text\">browserify</code> and <code class=\"language-text\">typescript</code> packages.\n<code class=\"language-text\">browserify</code> does not bundle its declaration files with its npm packages, so we needed to depend on <code class=\"language-text\">@types/browserify</code> for its declarations.\n<code class=\"language-text\">typescript</code>, on the other hand, packages its declaration files, so there was no need for any additional dependencies.</p>\n<p>Our package exposes declarations from each of those, so any user of our <code class=\"language-text\">browserify-typescript-extension</code> package needs to have these dependencies as well.\nFor that reason, we used <code class=\"language-text\">&quot;dependencies&quot;</code> and not <code class=\"language-text\">&quot;devDependencies&quot;</code>, because otherwise our consumers would have needed to manually install those packages.\nIf we had just written a command line application and not expected our package to be used as a library, we might have used <code class=\"language-text\">devDependencies</code>.</p>\n<h2>Red flags</h2>\n<h3><code class=\"language-text\">/// &lt;reference path=&quot;...&quot; /&gt;</code></h3>\n<p><em>Don’t</em> use <code class=\"language-text\">/// &lt;reference path=&quot;...&quot; /&gt;</code> in your declaration files.</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">/// &lt;reference path=\"../typescript/lib/typescriptServices.d.ts\" /></span>\n<span class=\"token operator\">...</span><span class=\"token punctuation\">.</span></code></pre></div>\n<p><em>Do</em> use <code class=\"language-text\">/// &lt;reference types=&quot;...&quot; /&gt;</code> instead.</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">/// &lt;reference types=\"typescript\" /></span>\n<span class=\"token operator\">...</span><span class=\"token punctuation\">.</span></code></pre></div>\n<p>Make sure to revisit the <a href=\"./Library%20Structures.md#consuming-dependencies\">Consuming dependencies</a> section for more information.</p>\n<h3>Packaging dependent declarations</h3>\n<p>If your type definitions depend on another package:</p>\n<ul>\n<li><em>Don’t</em> combine it with yours, keep each in their own file.</li>\n<li><em>Don’t</em> copy the declarations in your package either.</li>\n<li><em>Do</em> depend on the npm type declaration package if it doesn’t package its declaration files.</li>\n</ul>\n<h1>Publish to <a href=\"https://www.npmjs.com/~types\">@types</a></h1>\n<p>Packages under the <a href=\"https://www.npmjs.com/~types\">@types</a> organization are published automatically from <a href=\"https://github.com/DefinitelyTyped/DefinitelyTyped\">DefinitelyTyped</a> using the <a href=\"https://github.com/Microsoft/types-publisher\">types-publisher tool</a>.\nTo get your declarations published as an @types package, please submit a pull request to <a href=\"https://github.com/DefinitelyTyped/DefinitelyTyped\">https://github.com/DefinitelyTyped/DefinitelyTyped</a>.\nYou can find more details in the <a href=\"http://definitelytyped.org/guides/contributing.html\">contribution guidelines page</a>.</p>\n<p>{% endraw %}</p>","frontmatter":{"permalink":"/docs/handbook/declaration-files/publishing.html"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/docs/handbook/declaration-files/publishing.html","isOldHandbook":true}}}