{"componentChunkName":"component---src-templates-handbook-tsx","path":"/docs/handbook/declaration-files/by-example.html","webpackCompilationHash":"9ba7cceb403e6d704a1e","result":{"data":{"markdownRemark":{"id":"2db85a42-753e-5e70-b4f5-e170825643a3","excerpt":"{% raw %}# Introduction The purpose of this guide is to teach you how to write a high-quality definition file.\nThis guide is structured by showing documentation…","html":"<p>{% raw %}# Introduction</p>\n<p>The purpose of this guide is to teach you how to write a high-quality definition file.\nThis guide is structured by showing documentation for some API, along with sample usage of that API,\nand explaining how to write the corresponding declaration.</p>\n<p>These examples are ordered in approximately increasing order of complexity.</p>\n<ul>\n<li><a href=\"#global-variables\">Global Variables</a></li>\n<li><a href=\"#global-functions\">Global Functions</a></li>\n<li><a href=\"#objects-with-properties\">Objects with Properties</a></li>\n<li><a href=\"#overloaded-functions\">Overloaded Function</a></li>\n<li><a href=\"#reusable-types-interfaces\">Reusable Types (Interfaces)</a></li>\n<li><a href=\"#reusable-types-type-aliases\">Reusable Types (Type Aliases)</a></li>\n<li><a href=\"#organizing-types\">Organizing Types</a></li>\n<li><a href=\"#classes\">Classes</a></li>\n</ul>\n<h1>The Examples</h1>\n<h2>Global Variables</h2>\n<p><em>Documentation</em></p>\n<blockquote>\n<p>The global variable <code class=\"language-text\">foo</code> contains the number of widgets present.</p>\n</blockquote>\n<p><em>Code</em></p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Half the number of widgets is \"</span> <span class=\"token operator\">+</span> <span class=\"token punctuation\">(</span>foo <span class=\"token operator\">/</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><em>Declaration</em></p>\n<p>Use <code class=\"language-text\">declare var</code> to declare variables.\nIf the variable is read-only, you can use <code class=\"language-text\">declare const</code>.\nYou can also use <code class=\"language-text\">declare let</code> if the variable is block-scoped.</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token comment\">/** The number of widgets present */</span>\n<span class=\"token keyword\">declare</span> <span class=\"token keyword\">var</span> foo<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2>Global Functions</h2>\n<p><em>Documentation</em></p>\n<blockquote>\n<p>You can call the function <code class=\"language-text\">greet</code> with a string to show a greeting to the user.</p>\n</blockquote>\n<p><em>Code</em></p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token function\">greet</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello, world\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><em>Declaration</em></p>\n<p>Use <code class=\"language-text\">declare function</code> to declare functions.</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">declare</span> <span class=\"token keyword\">function</span> <span class=\"token function\">greet</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">greeting<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2>Objects with Properties</h2>\n<p><em>Documentation</em></p>\n<blockquote>\n<p>The global variable <code class=\"language-text\">myLib</code> has a function <code class=\"language-text\">makeGreeting</code> for creating greetings,\nand a property <code class=\"language-text\">numberOfGreetings</code> indicating the number of greetings made so far.</p>\n</blockquote>\n<p><em>Code</em></p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">let</span> result <span class=\"token operator\">=</span> myLib<span class=\"token punctuation\">.</span><span class=\"token function\">makeGreeting</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello, world\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"The computed greeting is:\"</span> <span class=\"token operator\">+</span> result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> count <span class=\"token operator\">=</span> myLib<span class=\"token punctuation\">.</span>numberOfGreetings<span class=\"token punctuation\">;</span></code></pre></div>\n<p><em>Declaration</em></p>\n<p>Use <code class=\"language-text\">declare namespace</code> to describe types or values accessed by dotted notation.</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">declare</span> <span class=\"token keyword\">namespace</span> myLib <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">function</span> <span class=\"token function\">makeGreeting</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">s<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> numberOfGreetings<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>Overloaded Functions</h2>\n<p><em>Documentation</em></p>\n<p>The <code class=\"language-text\">getWidget</code> function accepts a number and returns a Widget, or accepts a string and returns a Widget array.</p>\n<p><em>Code</em></p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">let</span> x<span class=\"token punctuation\">:</span> Widget <span class=\"token operator\">=</span> <span class=\"token function\">getWidget</span><span class=\"token punctuation\">(</span><span class=\"token number\">43</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">let</span> arr<span class=\"token punctuation\">:</span> Widget<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">getWidget</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"all of them\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><em>Declaration</em></p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">declare</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getWidget</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">n<span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> Widget<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">declare</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getWidget</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">s<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> Widget<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2>Reusable Types (Interfaces)</h2>\n<p><em>Documentation</em></p>\n<blockquote>\n<p>When specifying a greeting, you must pass a <code class=\"language-text\">GreetingSettings</code> object.\nThis object has the following properties:</p>\n<p>1 - greeting: Mandatory string</p>\n<p>2 - duration: Optional length of time (in milliseconds)</p>\n<p>3 - color: Optional string, e.g. ‘#ff00ff’</p>\n</blockquote>\n<p><em>Code</em></p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token function\">greet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  greeting<span class=\"token punctuation\">:</span> <span class=\"token string\">\"hello world\"</span><span class=\"token punctuation\">,</span>\n  duration<span class=\"token punctuation\">:</span> <span class=\"token number\">4000</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><em>Declaration</em></p>\n<p>Use an <code class=\"language-text\">interface</code> to define a type with properties.</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">interface</span> <span class=\"token class-name\">GreetingSettings</span> <span class=\"token punctuation\">{</span>\n  greeting<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n  duration<span class=\"token operator\">?</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">;</span>\n  color<span class=\"token operator\">?</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">declare</span> <span class=\"token keyword\">function</span> <span class=\"token function\">greet</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">setting<span class=\"token punctuation\">:</span> GreetingSettings</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2>Reusable Types (Type Aliases)</h2>\n<p><em>Documentation</em></p>\n<blockquote>\n<p>Anywhere a greeting is expected, you can provide a <code class=\"language-text\">string</code>, a function returning a <code class=\"language-text\">string</code>, or a <code class=\"language-text\">Greeter</code> instance.</p>\n</blockquote>\n<p><em>Code</em></p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">function</span> <span class=\"token function\">getGreeting</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token string\">\"howdy\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">MyGreeter</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Greeter</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">greet</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">greet</span><span class=\"token punctuation\">(</span>getGreeting<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">greet</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">MyGreeter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><em>Declaration</em></p>\n<p>You can use a type alias to make a shorthand for a type:</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">type</span> GreetingLike <span class=\"token operator\">=</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> MyGreeter<span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">declare</span> <span class=\"token keyword\">function</span> <span class=\"token function\">greet</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">g<span class=\"token punctuation\">:</span> GreetingLike</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2>Organizing Types</h2>\n<p><em>Documentation</em></p>\n<blockquote>\n<p>The <code class=\"language-text\">greeter</code> object can log to a file or display an alert.\nYou can provide LogOptions to <code class=\"language-text\">.log(...)</code> and alert options to <code class=\"language-text\">.alert(...)</code></p>\n</blockquote>\n<p><em>Code</em></p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">const</span> g <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Greeter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ng<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> verbose<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ng<span class=\"token punctuation\">.</span><span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> modal<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> title<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Current Greeting\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><em>Declaration</em></p>\n<p>Use namespaces to organize types.</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">declare</span> <span class=\"token keyword\">namespace</span> GreetingLib <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">interface</span> <span class=\"token class-name\">LogOptions</span> <span class=\"token punctuation\">{</span>\n        verbose<span class=\"token operator\">?</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">interface</span> <span class=\"token class-name\">AlertOptions</span> <span class=\"token punctuation\">{</span>\n        modal<span class=\"token punctuation\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>\n        title<span class=\"token operator\">?</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n        color<span class=\"token operator\">?</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>You can also create nested namespaces in one declaration:</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">declare</span> <span class=\"token keyword\">namespace</span> GreetingLib<span class=\"token punctuation\">.</span>Options <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// Refer to via GreetingLib.Options.Log</span>\n    <span class=\"token keyword\">interface</span> <span class=\"token class-name\">Log</span> <span class=\"token punctuation\">{</span>\n        verbose<span class=\"token operator\">?</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">interface</span> <span class=\"token class-name\">Alert</span> <span class=\"token punctuation\">{</span>\n        modal<span class=\"token punctuation\">:</span> <span class=\"token builtin\">boolean</span><span class=\"token punctuation\">;</span>\n        title<span class=\"token operator\">?</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n        color<span class=\"token operator\">?</span><span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>Classes</h2>\n<p><em>Documentation</em></p>\n<blockquote>\n<p>You can create a greeter by instantiating the <code class=\"language-text\">Greeter</code> object, or create a customized greeter by extending from it.</p>\n</blockquote>\n<p><em>Code</em></p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">const</span> myGreeter <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Greeter</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello, world\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmyGreeter<span class=\"token punctuation\">.</span>greeting <span class=\"token operator\">=</span> <span class=\"token string\">\"howdy\"</span><span class=\"token punctuation\">;</span>\nmyGreeter<span class=\"token punctuation\">.</span><span class=\"token function\">showGreeting</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">SpecialGreeter</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Greeter</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Very special greetings\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p><em>Declaration</em></p>\n<p>Use <code class=\"language-text\">declare class</code> to describe a class or class-like object.\nClasses can have properties and methods as well as a constructor.</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">declare</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">Greeter</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">constructor</span><span class=\"token punctuation\">(</span>greeting<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    greeting<span class=\"token punctuation\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">showGreeting</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<!-- Template\n\n##\n\n*Documentation*\n>\n\n*Code*\n\n```ts\n\n```\n\n*Declaration*\n\n```ts\n\n```\n\n-->\n<p>{% endraw %}</p>","frontmatter":{"permalink":"/docs/handbook/declaration-files/by-example.html"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/docs/handbook/declaration-files/by-example.html","isOldHandbook":true}}}