{"componentChunkName":"component---src-templates-handbook-tsx","path":"/docs/handbook/compiler-options.html","webpackCompilationHash":"9ba7cceb403e6d704a1e","result":{"data":{"markdownRemark":{"id":"44320f09-f14f-5240-8dd7-e382f1599bf4","excerpt":"{% raw %}## Compiler Options Option Type Default Description    Allow JavaScript files to be compiled.    or  Allow default imports from modules with no default…","html":"<p>{% raw %}## Compiler Options</p>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Type</th>\n<th>Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code class=\"language-text\">--allowJs</code></td>\n<td><code class=\"language-text\">boolean</code></td>\n<td><code class=\"language-text\">false</code></td>\n<td>Allow JavaScript files to be compiled.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">--allowSyntheticDefaultImports</code></td>\n<td><code class=\"language-text\">boolean</code></td>\n<td><code class=\"language-text\">module === &quot;system&quot;</code> or <code class=\"language-text\">--esModuleInterop</code></td>\n<td>Allow default imports from modules with no default export. This does not affect code emit, just typechecking.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">--allowUmdGlobalAccess</code></td>\n<td><code class=\"language-text\">boolean</code></td>\n<td><code class=\"language-text\">false</code></td>\n<td>Allow accessing UMD globals from modules.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">--allowUnreachableCode</code></td>\n<td><code class=\"language-text\">boolean</code></td>\n<td><code class=\"language-text\">false</code></td>\n<td>Do not report errors on unreachable code.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">--allowUnusedLabels</code></td>\n<td><code class=\"language-text\">boolean</code></td>\n<td><code class=\"language-text\">false</code></td>\n<td>Do not report errors on unused labels.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">--alwaysStrict</code></td>\n<td><code class=\"language-text\">boolean</code></td>\n<td><code class=\"language-text\">false</code></td>\n<td>Parse in strict mode and emit <code class=\"language-text\">&quot;use strict&quot;</code> for each source file</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">--baseUrl</code></td>\n<td><code class=\"language-text\">string</code></td>\n<td></td>\n<td>Base directory to resolve non-relative module names. See <a href=\"./Module%20Resolution.md#base-url\">Module Resolution documentation</a> for more details.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">--build</code><br/><code class=\"language-text\">-b</code></td>\n<td><code class=\"language-text\">boolean</code></td>\n<td><code class=\"language-text\">false</code></td>\n<td>Builds this project and all of its dependencies specified by <a href=\"./Project%20References.md\">Project References</a>. Note that this flag is not compatible with others on this page. See more <a href=\"./Project%20References.md\">here</a></td>\n</tr>\n<tr>\n<td><code class=\"language-text\">--charset</code></td>\n<td><code class=\"language-text\">string</code></td>\n<td><code class=\"language-text\">&quot;utf8&quot;</code></td>\n<td>The character set of the input files.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">--checkJs</code></td>\n<td><code class=\"language-text\">boolean</code></td>\n<td><code class=\"language-text\">false</code></td>\n<td>Report errors in <code class=\"language-text\">.js</code> files. Use in conjunction with <code class=\"language-text\">--allowJs</code>.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">--composite</code></td>\n<td><code class=\"language-text\">boolean</code></td>\n<td><code class=\"language-text\">true</code></td>\n<td>Ensure TypeScript can determine where to find the outputs of the referenced project to compile project.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">--declaration</code><br/><code class=\"language-text\">-d</code></td>\n<td><code class=\"language-text\">boolean</code></td>\n<td><code class=\"language-text\">false</code></td>\n<td>Generates corresponding <code class=\"language-text\">.d.ts</code> file.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">--declarationDir</code></td>\n<td><code class=\"language-text\">string</code></td>\n<td></td>\n<td>Output directory for generated declaration files.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">--declarationMap</code></td>\n<td><code class=\"language-text\">boolean</code></td>\n<td><code class=\"language-text\">false</code></td>\n<td>Generates a sourcemap for each corresponding ‘.d.ts’ file.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">--diagnostics</code></td>\n<td><code class=\"language-text\">boolean</code></td>\n<td><code class=\"language-text\">false</code></td>\n<td>Show diagnostic information.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">--disableSizeLimit</code></td>\n<td><code class=\"language-text\">boolean</code></td>\n<td><code class=\"language-text\">false</code></td>\n<td>Disable size limitation on JavaScript project.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">--downlevelIteration</code></td>\n<td><code class=\"language-text\">boolean</code></td>\n<td><code class=\"language-text\">false</code></td>\n<td>Provide full support for iterables in <code class=\"language-text\">for..of</code>, spread and destructuring when targeting ES5 or ES3.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">--emitBOM</code></td>\n<td><code class=\"language-text\">boolean</code></td>\n<td><code class=\"language-text\">false</code></td>\n<td>Emit a UTF-8 Byte Order Mark (BOM) in the beginning of output files.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">--emitDeclarationOnly</code></td>\n<td><code class=\"language-text\">boolean</code></td>\n<td><code class=\"language-text\">false</code></td>\n<td>Only emit ‘.d.ts’ declaration files.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">--emitDecoratorMetadata</code><sup>[1]</sup></td>\n<td><code class=\"language-text\">boolean</code></td>\n<td><code class=\"language-text\">false</code></td>\n<td>Emit design-type metadata for decorated declarations in source. See <a href=\"https://github.com/Microsoft/TypeScript/issues/2577\">issue #2577</a> for details.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">--esModuleInterop</code></td>\n<td><code class=\"language-text\">boolean</code></td>\n<td><code class=\"language-text\">false</code></td>\n<td>Emit <code class=\"language-text\">__importStar</code> and <code class=\"language-text\">__importDefault</code> helpers for runtime babel ecosystem compatibility and enable <code class=\"language-text\">--allowSyntheticDefaultImports</code> for typesystem compatibility.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">--experimentalDecorators</code><sup>[1]</sup></td>\n<td><code class=\"language-text\">boolean</code></td>\n<td><code class=\"language-text\">false</code></td>\n<td>Enables experimental support for ES decorators.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">--extendedDiagnostics</code></td>\n<td><code class=\"language-text\">boolean</code></td>\n<td><code class=\"language-text\">false</code></td>\n<td>Show verbose diagnostic information</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">--forceConsistentCasingInFileNames</code></td>\n<td><code class=\"language-text\">boolean</code></td>\n<td><code class=\"language-text\">false</code></td>\n<td>Disallow inconsistently-cased references to the same file.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">--help</code><br/><code class=\"language-text\">-h</code></td>\n<td></td>\n<td></td>\n<td>Print help message.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">--importHelpers</code></td>\n<td><code class=\"language-text\">boolean</code></td>\n<td><code class=\"language-text\">false</code></td>\n<td>Import emit helpers (e.g. <code class=\"language-text\">__extends</code>, <code class=\"language-text\">__rest</code>, etc..) from <a href=\"https://www.npmjs.com/package/tslib\"><code class=\"language-text\">tslib</code></a></td>\n</tr>\n<tr>\n<td><code class=\"language-text\">--incremental</code></td>\n<td><code class=\"language-text\">boolean</code></td>\n<td><code class=\"language-text\">true</code> if <code class=\"language-text\">composite</code> is on, <code class=\"language-text\">false</code> otherwise</td>\n<td>Enable incremental compilation by reading/writing information from prior compilations to a file on disk. This file is controlled by the <code class=\"language-text\">--tsBuildInfoFile</code> flag.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">--inlineSourceMap</code></td>\n<td><code class=\"language-text\">boolean</code></td>\n<td><code class=\"language-text\">false</code></td>\n<td>Emit a single file with source maps instead of having a separate file.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">--inlineSources</code></td>\n<td><code class=\"language-text\">boolean</code></td>\n<td><code class=\"language-text\">false</code></td>\n<td>Emit the source alongside the sourcemaps within a single file; requires <code class=\"language-text\">--inlineSourceMap</code> or <code class=\"language-text\">--sourceMap</code> to be set.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">--init</code></td>\n<td></td>\n<td></td>\n<td>Initializes a TypeScript project and creates a <code class=\"language-text\">tsconfig.json</code> file.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">--isolatedModules</code></td>\n<td><code class=\"language-text\">boolean</code></td>\n<td><code class=\"language-text\">false</code></td>\n<td>Perform additional checks to ensure that separate compilation (such as with <a href=\"https://github.com/Microsoft/TypeScript/wiki/Using-the-Compiler-API#a-simple-transform-function\"><code class=\"language-text\">transpileModule</code></a> or <a href=\"https://babeljs.io/docs/en/babel-plugin-transform-typescript\">@babel/plugin-transform-typescript</a>) would be safe.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">--jsx</code></td>\n<td><code class=\"language-text\">string</code></td>\n<td><code class=\"language-text\">&quot;preserve&quot;</code></td>\n<td>Support JSX in <code class=\"language-text\">.tsx</code> files: <code class=\"language-text\">&quot;react&quot;</code>, <code class=\"language-text\">&quot;preserve&quot;</code>, <code class=\"language-text\">&quot;react-native&quot;</code>. See <a href=\"/9584940e83a3bb84125f8d13c0a6e5f0/JSX.md\">JSX</a>.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">--jsxFactory</code></td>\n<td><code class=\"language-text\">string</code></td>\n<td><code class=\"language-text\">&quot;React.createElement&quot;</code></td>\n<td>Specify the JSX factory function to use when targeting react JSX emit, e.g. <code class=\"language-text\">React.createElement</code> or <code class=\"language-text\">h</code>.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">--keyofStringsOnly</code></td>\n<td><code class=\"language-text\">boolean</code></td>\n<td><code class=\"language-text\">false</code></td>\n<td>Resolve <code class=\"language-text\">keyof</code> to string valued property names only (no numbers or symbols).</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">--lib</code></td>\n<td><code class=\"language-text\">string[]</code></td>\n<td></td>\n<td>List of library files to be included in the compilation.<br/>Possible values are:  <br/>► <code class=\"language-text\">ES5</code> <br/>► <code class=\"language-text\">ES6</code> <br/>► <code class=\"language-text\">ES2015</code> <br/>► <code class=\"language-text\">ES7</code> <br/>► <code class=\"language-text\">ES2016</code> <br/>► <code class=\"language-text\">ES2017</code>  <br/>► <code class=\"language-text\">ES2018</code> <br/>► <code class=\"language-text\">ESNext</code> <br/>► <code class=\"language-text\">DOM</code> <br/>► <code class=\"language-text\">DOM.Iterable</code> <br/>► <code class=\"language-text\">WebWorker</code> <br/>► <code class=\"language-text\">ScriptHost</code> <br/>► <code class=\"language-text\">ES2015.Core</code> <br/>► <code class=\"language-text\">ES2015.Collection</code> <br/>► <code class=\"language-text\">ES2015.Generator</code> <br/>► <code class=\"language-text\">ES2015.Iterable</code> <br/>► <code class=\"language-text\">ES2015.Promise</code> <br/>► <code class=\"language-text\">ES2015.Proxy</code> <br/>► <code class=\"language-text\">ES2015.Reflect</code> <br/>► <code class=\"language-text\">ES2015.Symbol</code> <br/>► <code class=\"language-text\">ES2015.Symbol.WellKnown</code> <br/>► <code class=\"language-text\">ES2016.Array.Include</code> <br/>► <code class=\"language-text\">ES2017.object</code> <br/>► <code class=\"language-text\">ES2017.Intl</code> <br/>► <code class=\"language-text\">ES2017.SharedMemory</code> <br/>► <code class=\"language-text\">ES2017.String</code> <br/>► <code class=\"language-text\">ES2017.TypedArrays</code> <br/>► <code class=\"language-text\">ES2018.Intl</code> <br/>► <code class=\"language-text\">ES2018.Promise</code> <br/>► <code class=\"language-text\">ES2018.RegExp</code> <br/>► <code class=\"language-text\">ESNext.AsyncIterable</code> <br/>► <code class=\"language-text\">ESNext.Array</code> <br/>► <code class=\"language-text\">ESNext.Intl</code> <br/>► <code class=\"language-text\">ESNext.Symbol</code> <br/><br/> Note: If <code class=\"language-text\">--lib</code> is not specified a default list of libraries are injected. The default libraries injected are:  <br/> ► For <code class=\"language-text\">--target ES5</code>: <code class=\"language-text\">DOM,ES5,ScriptHost</code><br/>  ► For <code class=\"language-text\">--target ES6</code>: <code class=\"language-text\">DOM,ES6,DOM.Iterable,ScriptHost</code></td>\n</tr>\n<tr>\n<td><code class=\"language-text\">--listEmittedFiles</code></td>\n<td><code class=\"language-text\">boolean</code></td>\n<td><code class=\"language-text\">false</code></td>\n<td>Print names of generated files part of the compilation.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">--listFiles</code></td>\n<td><code class=\"language-text\">boolean</code></td>\n<td><code class=\"language-text\">false</code></td>\n<td>Print names of files part of the compilation.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">--locale</code></td>\n<td><code class=\"language-text\">string</code></td>\n<td><em>(platform specific)</em></td>\n<td>The locale to use to show error messages, e.g. en-us. <br/>Possible values are:  <br/>► English (US): <code class=\"language-text\">en</code> <br/>► Czech: <code class=\"language-text\">cs</code> <br/>► German: <code class=\"language-text\">de</code> <br/>► Spanish: <code class=\"language-text\">es</code> <br/>► French: <code class=\"language-text\">fr</code> <br/>► Italian: <code class=\"language-text\">it</code> <br/>► Japanese: <code class=\"language-text\">ja</code> <br/>► Korean: <code class=\"language-text\">ko</code> <br/>► Polish: <code class=\"language-text\">pl</code> <br/>► Portuguese(Brazil): <code class=\"language-text\">pt-BR</code> <br/>► Russian: <code class=\"language-text\">ru</code> <br/>► Turkish: <code class=\"language-text\">tr</code> <br/>► Simplified Chinese: <code class=\"language-text\">zh-CN</code>  <br/>► Traditional Chinese: <code class=\"language-text\">zh-TW</code></td>\n</tr>\n<tr>\n<td><code class=\"language-text\">--mapRoot</code></td>\n<td><code class=\"language-text\">string</code></td>\n<td></td>\n<td>Specifies the location where debugger should locate map files instead of generated locations. Use this flag if the .map files will be located at run-time in a different location than the .js files. The location specified will be embedded in the sourceMap to direct the debugger where the map files will be located. This flag will not create the specified path and generate the map files in that location. Instead, create a post build step that moves the files to the specified path.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">--maxNodeModuleJsDepth</code></td>\n<td><code class=\"language-text\">number</code></td>\n<td><code class=\"language-text\">0</code></td>\n<td>The maximum dependency depth to search under node_modules and load JavaScript files. Only applicable with <code class=\"language-text\">--allowJs</code>.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">--module</code><br/><code class=\"language-text\">-m</code></td>\n<td><code class=\"language-text\">string</code></td>\n<td><code class=\"language-text\">target === &quot;ES3&quot; or &quot;ES5&quot; ? &quot;CommonJS&quot; : &quot;ES6&quot;</code></td>\n<td>Specify module code generation: <code class=\"language-text\">&quot;None&quot;</code>, <code class=\"language-text\">&quot;CommonJS&quot;</code>, <code class=\"language-text\">&quot;AMD&quot;</code>, <code class=\"language-text\">&quot;System&quot;</code>, <code class=\"language-text\">&quot;UMD&quot;</code>, <code class=\"language-text\">&quot;ES6&quot;</code>, <code class=\"language-text\">&quot;ES2015&quot;</code> or <code class=\"language-text\">&quot;ESNext&quot;</code>.<br/>► Only <code class=\"language-text\">&quot;AMD&quot;</code> and <code class=\"language-text\">&quot;System&quot;</code> can be used in conjunction with <code class=\"language-text\">--outFile</code>.<br/>► <code class=\"language-text\">&quot;ES6&quot;</code> and <code class=\"language-text\">&quot;ES2015&quot;</code> values may be used when targeting <code class=\"language-text\">&quot;ES5&quot;</code> or lower.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">--moduleResolution</code></td>\n<td><code class=\"language-text\">string</code></td>\n<td><code class=\"language-text\">module === &quot;AMD&quot; or &quot;System&quot; or &quot;ES6&quot; ?  &quot;Classic&quot; : &quot;Node&quot;</code></td>\n<td>Determine how modules get resolved. Either <code class=\"language-text\">&quot;Node&quot;</code> for Node.js/io.js style resolution, or <code class=\"language-text\">&quot;Classic&quot;</code>. See <a href=\"./Module%20Resolution.md\">Module Resolution documentation</a> for more details.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">--newLine</code></td>\n<td><code class=\"language-text\">string</code></td>\n<td><em>(platform specific)</em></td>\n<td>Use the specified end of line sequence to be used when emitting files: <code class=\"language-text\">&quot;crlf&quot;</code> (windows) or <code class=\"language-text\">&quot;lf&quot;</code> (unix).”</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">--noEmit</code></td>\n<td><code class=\"language-text\">boolean</code></td>\n<td><code class=\"language-text\">false</code></td>\n<td>Do not emit outputs.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">--noEmitHelpers</code></td>\n<td><code class=\"language-text\">boolean</code></td>\n<td><code class=\"language-text\">false</code></td>\n<td>Do not generate custom helper functions like <code class=\"language-text\">__extends</code> in compiled output.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">--noEmitOnError</code></td>\n<td><code class=\"language-text\">boolean</code></td>\n<td><code class=\"language-text\">false</code></td>\n<td>Do not emit outputs if any errors were reported.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">--noErrorTruncation</code></td>\n<td><code class=\"language-text\">boolean</code></td>\n<td><code class=\"language-text\">false</code></td>\n<td>Do not truncate error messages.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">--noFallthroughCasesInSwitch</code></td>\n<td><code class=\"language-text\">boolean</code></td>\n<td><code class=\"language-text\">false</code></td>\n<td>Report errors for fallthrough cases in switch statement.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">--noImplicitAny</code></td>\n<td><code class=\"language-text\">boolean</code></td>\n<td><code class=\"language-text\">false</code></td>\n<td>Raise error on expressions and declarations with an implied <code class=\"language-text\">any</code> type.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">--noImplicitReturns</code></td>\n<td><code class=\"language-text\">boolean</code></td>\n<td><code class=\"language-text\">false</code></td>\n<td>Report an error when not all code paths in function return a value.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">--noImplicitThis</code></td>\n<td><code class=\"language-text\">boolean</code></td>\n<td><code class=\"language-text\">false</code></td>\n<td>Raise error on <code class=\"language-text\">this</code> expressions with an implied <code class=\"language-text\">any</code> type.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">--noImplicitUseStrict</code></td>\n<td><code class=\"language-text\">boolean</code></td>\n<td><code class=\"language-text\">false</code></td>\n<td>Do not emit <code class=\"language-text\">&quot;use strict&quot;</code> directives in module output.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">--noLib</code></td>\n<td><code class=\"language-text\">boolean</code></td>\n<td><code class=\"language-text\">false</code></td>\n<td>Do not include the default library file (<code class=\"language-text\">lib.d.ts</code>).</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">--noResolve</code></td>\n<td><code class=\"language-text\">boolean</code></td>\n<td><code class=\"language-text\">false</code></td>\n<td>Do not add triple-slash references or module import targets to the list of compiled files.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">--noStrictGenericChecks</code></td>\n<td><code class=\"language-text\">boolean</code></td>\n<td><code class=\"language-text\">false</code></td>\n<td>Disable strict checking of generic signatures in function types.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">--noUnusedLocals</code></td>\n<td><code class=\"language-text\">boolean</code></td>\n<td><code class=\"language-text\">false</code></td>\n<td>Report errors on unused locals.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">--noUnusedParameters</code></td>\n<td><code class=\"language-text\">boolean</code></td>\n<td><code class=\"language-text\">false</code></td>\n<td>Report errors on unused parameters.</td>\n</tr>\n<tr>\n<td><del><code class=\"language-text\">--out</code></del></td>\n<td><code class=\"language-text\">string</code></td>\n<td></td>\n<td>DEPRECATED. Use <code class=\"language-text\">--outFile</code> instead.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">--outDir</code></td>\n<td><code class=\"language-text\">string</code></td>\n<td></td>\n<td>Redirect output structure to the directory.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">--outFile</code></td>\n<td><code class=\"language-text\">string</code></td>\n<td></td>\n<td>Concatenate and emit output to single file. The order of concatenation is determined by the list of files passed to the compiler on the command line along with triple-slash references and imports. See <a href=\"https://github.com/Microsoft/TypeScript/wiki/FAQ#how-do-i-control-file-ordering-in-combined-output---out-\">output file order documentation</a> for more details.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">paths</code><sup>[2]</sup></td>\n<td><code class=\"language-text\">Object</code></td>\n<td></td>\n<td>List of path mapping entries for module names to locations relative to the <code class=\"language-text\">baseUrl</code>. See <a href=\"./Module%20Resolution.md#path-mapping\">Module Resolution documentation</a> for more details.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">--preserveConstEnums</code></td>\n<td><code class=\"language-text\">boolean</code></td>\n<td><code class=\"language-text\">false</code></td>\n<td>Do not erase const enum declarations in generated code. See <a href=\"https://github.com/Microsoft/TypeScript/blob/master/doc/spec.md#94-constant-enum-declarations\">const enums documentation</a> for more details.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">--preserveSymlinks</code></td>\n<td><code class=\"language-text\">boolean</code></td>\n<td><code class=\"language-text\">false</code></td>\n<td>Do not resolve symlinks to their real path; treat a symlinked file like a real one.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">--preserveWatchOutput</code></td>\n<td><code class=\"language-text\">boolean</code></td>\n<td><code class=\"language-text\">false</code></td>\n<td>Keep outdated console output in watch mode instead of clearing the screen</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">--pretty</code></td>\n<td><code class=\"language-text\">boolean</code></td>\n<td><code class=\"language-text\">true</code> unless piping to another program or redirecting output to a file</td>\n<td>Stylize errors and messages using color and context.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">--project</code><br/><code class=\"language-text\">-p</code></td>\n<td><code class=\"language-text\">string</code></td>\n<td></td>\n<td>Compile a project given a valid configuration file.<br/>The argument can be a file path to a valid JSON configuration file, or a directory path to a directory containing a <code class=\"language-text\">tsconfig.json</code> file.<br/>See <a href=\"./tsconfig.json.md\">tsconfig.json</a> documentation for more details.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">--reactNamespace</code></td>\n<td><code class=\"language-text\">string</code></td>\n<td><code class=\"language-text\">&quot;React&quot;</code></td>\n<td>DEPRECATED. Use <code class=\"language-text\">--jsxFactory</code> instead.<br/>Specifies the object invoked for <code class=\"language-text\">createElement</code> and <code class=\"language-text\">__spread</code> when targeting <code class=\"language-text\">&quot;react&quot;</code> JSX emit.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">--removeComments</code></td>\n<td><code class=\"language-text\">boolean</code></td>\n<td><code class=\"language-text\">false</code></td>\n<td>Remove all comments except copy-right header comments beginning with <code class=\"language-text\">/*!</code></td>\n</tr>\n<tr>\n<td><code class=\"language-text\">--resolveJsonModule</code></td>\n<td><code class=\"language-text\">boolean</code></td>\n<td><code class=\"language-text\">false</code></td>\n<td>Include modules imported with <code class=\"language-text\">.json</code> extension.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">--rootDir</code></td>\n<td><code class=\"language-text\">string</code></td>\n<td><em>(common root directory is computed from the list of input files)</em></td>\n<td>Specifies the root directory of input files. Only use to control the output directory structure with <code class=\"language-text\">--outDir</code>.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">rootDirs</code><sup>[2]</sup></td>\n<td><code class=\"language-text\">string[]</code></td>\n<td></td>\n<td>List of <i>root</i> folders whose combined content represent the structure of the project at runtime. See <a href=\"./Module%20Resolution.md#virtual-directories-with-rootdirs\">Module Resolution documentation</a> for more details.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">--showConfig</code></td>\n<td><code class=\"language-text\">boolean</code></td>\n<td><code class=\"language-text\">false</code></td>\n<td>Rather than actually execute a build with the other input options and config files, show the final implied config file in the output.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">--skipDefaultLibCheck</code></td>\n<td><code class=\"language-text\">boolean</code></td>\n<td><code class=\"language-text\">false</code></td>\n<td>DEPRECATED. Use <code class=\"language-text\">--skipLibCheck</code> instead.<br/>Skip type checking of <a href=\"./Triple-Slash%20Directives.md#-reference-no-default-libtrue\">default library declaration files</a>.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">--skipLibCheck</code></td>\n<td><code class=\"language-text\">boolean</code></td>\n<td><code class=\"language-text\">false</code></td>\n<td>Skip type checking of all declaration files (<code class=\"language-text\">*.d.ts</code>).</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">--sourceMap</code></td>\n<td><code class=\"language-text\">boolean</code></td>\n<td><code class=\"language-text\">false</code></td>\n<td>Generates corresponding <code class=\"language-text\">.map</code> file.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">--sourceRoot</code></td>\n<td><code class=\"language-text\">string</code></td>\n<td></td>\n<td>Specifies the location where debugger should locate TypeScript files instead of source locations. Use this flag if the sources will be located at run-time in a different location than that at design-time. The location specified will be embedded in the sourceMap to direct the debugger where the source files will be located.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">--strict</code></td>\n<td><code class=\"language-text\">boolean</code></td>\n<td><code class=\"language-text\">false</code></td>\n<td>Enable all strict type checking options. <br/>Enabling <code class=\"language-text\">--strict</code> enables <code class=\"language-text\">--noImplicitAny</code>, <code class=\"language-text\">--noImplicitThis</code>, <code class=\"language-text\">--alwaysStrict</code>, <code class=\"language-text\">--strictBindCallApply</code>, <code class=\"language-text\">--strictNullChecks</code>, <code class=\"language-text\">--strictFunctionTypes</code> and <code class=\"language-text\">--strictPropertyInitialization</code>.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">--strictBindCallApply</code></td>\n<td><code class=\"language-text\">boolean</code></td>\n<td><code class=\"language-text\">false</code></td>\n<td>Enable stricter checking of the <code class=\"language-text\">bind</code>, <code class=\"language-text\">call</code>, and <code class=\"language-text\">apply</code> methods on functions.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">--strictFunctionTypes</code></td>\n<td><code class=\"language-text\">boolean</code></td>\n<td><code class=\"language-text\">false</code></td>\n<td>Disable bivariant parameter checking for function types.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">--strictPropertyInitialization</code></td>\n<td><code class=\"language-text\">boolean</code></td>\n<td><code class=\"language-text\">false</code></td>\n<td>Ensure non-undefined class properties are initialized in the constructor. This option requires <code class=\"language-text\">--strictNullChecks</code> be enabled in order to take effect.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">--strictNullChecks</code></td>\n<td><code class=\"language-text\">boolean</code></td>\n<td><code class=\"language-text\">false</code></td>\n<td>In strict null checking mode, the <code class=\"language-text\">null</code> and <code class=\"language-text\">undefined</code> values are not in the domain of every type and are only assignable to themselves and <code class=\"language-text\">any</code> (the one exception being that <code class=\"language-text\">undefined</code> is also assignable to <code class=\"language-text\">void</code>).</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">--suppressExcessPropertyErrors</code></td>\n<td><code class=\"language-text\">boolean</code></td>\n<td><code class=\"language-text\">false</code></td>\n<td>Suppress excess property checks for object literals.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">--suppressImplicitAnyIndexErrors</code></td>\n<td><code class=\"language-text\">boolean</code></td>\n<td><code class=\"language-text\">false</code></td>\n<td>Suppress <code class=\"language-text\">--noImplicitAny</code> errors for indexing objects lacking index signatures. See <a href=\"https://github.com/Microsoft/TypeScript/issues/1232#issuecomment-64510362\">issue #1232</a> for more details.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">--target</code><br/><code class=\"language-text\">-t</code></td>\n<td><code class=\"language-text\">string</code></td>\n<td><code class=\"language-text\">&quot;ES3&quot;</code></td>\n<td>Specify ECMAScript target version: <br/>► <code class=\"language-text\">&quot;ES3&quot;</code> (default) <br/>► <code class=\"language-text\">&quot;ES5&quot;</code> <br/>► <code class=\"language-text\">&quot;ES6&quot;</code>/<code class=\"language-text\">&quot;ES2015&quot;</code> <br/>► <code class=\"language-text\">&quot;ES2016&quot;</code> <br/>► <code class=\"language-text\">&quot;ES2017&quot;</code> <br/>► <code class=\"language-text\">&quot;ES2018&quot;</code> <br/>► <code class=\"language-text\">&quot;ES2019&quot;</code> <br/>► <code class=\"language-text\">&quot;ES2020&quot;</code> <br/>► <code class=\"language-text\">&quot;ESNext&quot;</code><br/><br/> Note: <code class=\"language-text\">&quot;ESNext&quot;</code> targets latest supported <a href=\"https://github.com/tc39/proposals\">ES proposed features</a>.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">--traceResolution</code></td>\n<td><code class=\"language-text\">boolean</code></td>\n<td><code class=\"language-text\">false</code></td>\n<td>Report module resolution log messages.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">--tsBuildInfoFile</code></td>\n<td><code class=\"language-text\">string</code></td>\n<td><code class=\"language-text\">.tsbuildinfo</code></td>\n<td>Specify what file to store incremental build information in.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">--types</code></td>\n<td><code class=\"language-text\">string[]</code></td>\n<td></td>\n<td>List of names of type definitions to include. See <a href=\"./tsconfig.json.md#types-typeroots-and-types\">@types, —typeRoots and —types</a> for more details.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">--typeRoots</code></td>\n<td><code class=\"language-text\">string[]</code></td>\n<td></td>\n<td>List of folders to include type definitions from. See <a href=\"./tsconfig.json.md#types-typeroots-and-types\">@types, —typeRoots and —types</a> for more details.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">--version</code><br/><code class=\"language-text\">-v</code></td>\n<td></td>\n<td></td>\n<td>Print the compiler’s version.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">--watch</code><br/><code class=\"language-text\">-w</code></td>\n<td></td>\n<td></td>\n<td>Run the compiler in watch mode. Watch input files and trigger recompilation on changes. The implementation of watching files and directories can be configured using environment variable. See <a href=\"./Configuring%20Watch.md\">configuring watch</a> for more details.</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li><sup>[1]</sup> These options are experimental.</li>\n<li><sup>[2]</sup> These options are only allowed in <code class=\"language-text\">tsconfig.json</code>, and not through command-line switches.</li>\n</ul>\n<h2>Related</h2>\n<ul>\n<li>Setting compiler options in <a href=\"./tsconfig.json.md\"><code class=\"language-text\">tsconfig.json</code></a> files.</li>\n<li>Setting compiler options in <a href=\"./Compiler%20Options%20in%20MSBuild.md\">MSBuild projects</a>.</li>\n</ul>\n<p>{% endraw %}</p>","frontmatter":{"permalink":"/docs/handbook/compiler-options.html"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/docs/handbook/compiler-options.html","isOldHandbook":true}}}