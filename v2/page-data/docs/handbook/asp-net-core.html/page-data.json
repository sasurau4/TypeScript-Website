{"componentChunkName":"component---src-templates-handbook-tsx","path":"/docs/handbook/asp-net-core.html","webpackCompilationHash":"9ba7cceb403e6d704a1e","result":{"data":{"markdownRemark":{"id":"083c036b-e00d-5b77-b0c5-44235b0c4b4e","excerpt":"{% raw %}# Setup Install ASP.NET Core and TypeScript First, install ASP.NET Core if you need it. This quick-start guide requires Visual Studio 2015 or 201…","html":"<p>{% raw %}# Setup</p>\n<h2>Install ASP.NET Core and TypeScript</h2>\n<p>First, <a href=\"https://get.asp.net\">install ASP.NET Core</a> if you need it. This quick-start guide requires Visual Studio 2015 or 2017.</p>\n<p>Next, if your version of Visual Studio does not already have the latest TypeScript, you can <a href=\"http://www.microsoft.com/en-us/download/details.aspx?id=48593\">install it</a>.</p>\n<h2>Create a new project</h2>\n<ol>\n<li>Choose <strong>File</strong></li>\n<li>Choose <strong>New Project</strong> (Ctrl + Shift + N)</li>\n<li>Choose <strong>Visual C#</strong></li>\n<li>\n<p>For VS2015, choose <strong>ASP.NET Web Application</strong> > <strong>ASP.NET 5 Empty</strong>, and let’s uncheck “Host in the cloud” since we’re going to run this locally.</p>\n<p><img src=\"../../assets/images/tutorials/aspnet/new-asp-project-empty.png\" alt=\"Use empty template\"></p>\n<p>For VS2017, choose <strong>ASP.NET Core Web Application (.NET Core)</strong> > <strong>ASP.NET Core 1.1 Empty</strong> instead.</p>\n<p><img src=\"../../assets/images/tutorials/aspnet/new-asp-project-empty-17.PNG\" alt=\"Use empty template VS2017\"></p>\n</li>\n</ol>\n<p>Run the application and make sure that it works.</p>\n<h2>Set up the server</h2>\n<h3>VS2015</h3>\n<p>In <code class=\"language-text\">project.json</code> add another entry in <code class=\"language-text\">&quot;dependencies&quot;</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token property\">\"Microsoft.AspNet.StaticFiles\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"1.0.0-rc1-final\"</span></code></pre></div>\n<p>The resulting dependencies should look like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\">  <span class=\"token property\">\"dependencies\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"Microsoft.AspNet.IISPlatformHandler\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"1.0.0-rc1-final\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"Microsoft.AspNet.Server.Kestrel\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"1.0.0-rc1-final\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"Microsoft.AspNet.StaticFiles\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"1.0.0-rc1-final\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p>Replace the body of <code class=\"language-text\">Configure</code> in <code class=\"language-text\">Startup.cs</code> with</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">Configure</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">IApplicationBuilder</span> app<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    app<span class=\"token punctuation\">.</span><span class=\"token function\">UseIISPlatformHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    app<span class=\"token punctuation\">.</span><span class=\"token function\">UseDefaultFiles</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    app<span class=\"token punctuation\">.</span><span class=\"token function\">UseStaticFiles</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3>VS2017</h3>\n<p>Open <strong>Dependencies</strong> > <strong>Manage NuGet Packages</strong> > <strong>Browse</strong>. Search and install <code class=\"language-text\">Microsoft.AspNetCore.StaticFiles</code> 1.1.2:</p>\n<p><img src=\"../../assets/images/tutorials/aspnet/install-nuget-packages.png\" alt=\"Install Microsoft.AspNetCore.StaticFiles\"></p>\n<p>Replace the body of <code class=\"language-text\">Configure</code> in <code class=\"language-text\">Startup.cs</code> with</p>\n<div class=\"gatsby-highlight\" data-language=\"cs\"><pre class=\"language-cs\"><code class=\"language-cs\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">Configure</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">IApplicationBuilder</span> app<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    app<span class=\"token punctuation\">.</span><span class=\"token function\">UseDefaultFiles</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    app<span class=\"token punctuation\">.</span><span class=\"token function\">UseStaticFiles</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>You may need to restart VS for the red squiggly lines below <code class=\"language-text\">UseDefaultFiles</code> and <code class=\"language-text\">UseStaticFiles</code> to disappear.</p>\n<h1>Add TypeScript</h1>\n<p>The next step is to add a folder for TypeScript.</p>\n<p><img src=\"../../assets/images/tutorials/aspnet/new-folder.png\" alt=\"Create new folder\"></p>\n<p>We’ll just call it <code class=\"language-text\">scripts</code>.</p>\n<p><img src=\"../../assets/images/tutorials/aspnet/scripts-folder.png\" alt=\"scripts folder\"></p>\n<h2>Add TypeScript code</h2>\n<p>Right click on <code class=\"language-text\">scripts</code> and click <strong>New Item</strong>.\nThen choose <strong>TypeScript File</strong> (it may be in the .NET Core section) and name the file <code class=\"language-text\">app.ts</code>.</p>\n<p><img src=\"../../assets/images/tutorials/aspnet/new-item.png\" alt=\"New item\"></p>\n<h2>Add example code</h2>\n<p>Type the following code into app.ts.</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">function</span> <span class=\"token function\">sayHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> compiler <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"compiler\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> HTMLInputElement<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> framework <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"framework\"</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> HTMLInputElement<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Hello from </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>compiler<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> and </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>framework<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">!</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>Set up the build</h2>\n<h3>Configure the TypeScript compiler</h3>\n<p>First we need to tell TypeScript how to build.\nRight click on the scripts folder and click <strong>New Item</strong>.\nThen choose <strong>TypeScript Configuration File</strong> and use the default name <code class=\"language-text\">tsconfig.json</code>.</p>\n<p><img src=\"../../assets/images/tutorials/aspnet/new-tsconfig.png\" alt=\"Create tsconfig.json\"></p>\n<p>Replace the default <code class=\"language-text\">tsconfig.json</code> with the following:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"compilerOptions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"noImplicitAny\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"noEmitOnError\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"sourceMap\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"es5\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"files\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token string\">\"./app.ts\"</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"compileOnSave\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>This is similar to the default, with the following differences:</p>\n<ol>\n<li>It sets <code class=\"language-text\">&quot;noImplicitAny&quot;: true</code>.</li>\n<li>It explicitly lists <code class=\"language-text\">&quot;files&quot;</code> instead of relying on <code class=\"language-text\">&quot;excludes&quot;</code>.</li>\n<li>It sets <code class=\"language-text\">&quot;compileOnSave&quot;: true</code>.</li>\n</ol>\n<p><code class=\"language-text\">&quot;noImplicitAny&quot;</code> is good idea whenever you’re writing new code — you can make sure that you don’t write any untyped code by mistake.\n<code class=\"language-text\">&quot;compileOnSave&quot;</code> makes it easy to update your code in a running web app.</p>\n<h3>Set up NPM</h3>\n<p>Now we need to set up NPM so we can download JavaScript packages.\nRight click on the project and click <strong>New Item</strong>.\nThen choose <strong>NPM Configuration File</strong> and use the default name <code class=\"language-text\">package.json</code>.\nInside <code class=\"language-text\">&quot;devDependencies&quot;</code> add “gulp” and “del”:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token property\">\"devDependencies\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"gulp\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"3.9.0\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"del\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2.2.0\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Visual Studio should start installing gulp and del as soon as you save the file.\nIf not, right-click package.json and then <strong>Restore Packages</strong>.</p>\n<h3>Set up gulp</h3>\n<p>Finally, add a new JavaScript file named <code class=\"language-text\">gulpfile.js</code>.\nPut the following code inside:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">/// &lt;binding AfterBuild='default' Clean='clean' /></span>\n<span class=\"token comment\">/*\nThis file is the main entry point for defining Gulp tasks and using Gulp plugins.\nClick here to learn more. http://go.microsoft.com/fwlink/?LinkId=518007\n*/</span>\n\n<span class=\"token keyword\">var</span> gulp <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'gulp'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> del <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'del'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> paths <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    scripts<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'scripts/**/*.js'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'scripts/**/*.ts'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'scripts/**/*.map'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\ngulp<span class=\"token punctuation\">.</span><span class=\"token function\">task</span><span class=\"token punctuation\">(</span><span class=\"token string\">'clean'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">del</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'wwwroot/scripts/**/*'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\ngulp<span class=\"token punctuation\">.</span><span class=\"token function\">task</span><span class=\"token punctuation\">(</span><span class=\"token string\">'default'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    gulp<span class=\"token punctuation\">.</span><span class=\"token function\">src</span><span class=\"token punctuation\">(</span>paths<span class=\"token punctuation\">.</span>scripts<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>gulp<span class=\"token punctuation\">.</span><span class=\"token function\">dest</span><span class=\"token punctuation\">(</span><span class=\"token string\">'wwwroot/scripts'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>The first line tells Visual Studio to run the task ‘default’ after the build finishes.\nIt will also run the ‘clean’ task when you ask Visual Studio to clean the build.</p>\n<p>Now right-click on <code class=\"language-text\">gulpfile.js</code> and click <strong>Task Runner Explorer</strong>.\nIf ‘default’ and ‘clean’ tasks don’t show up, refresh the explorer:</p>\n<p><img src=\"../../assets/images/tutorials/aspnet/task-runner-explorer.png\" alt=\"Refresh Task Runner Explorer\"></p>\n<h2>Write an HTML page</h2>\n<p>Add a New Item named <code class=\"language-text\">index.html</code> inside <code class=\"language-text\">wwwroot</code>.\nUse the following code for <code class=\"language-text\">index.html</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token doctype\">&lt;!DOCTYPE html></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>utf-8<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>scripts/app.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>message<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span><span class=\"token punctuation\">></span></span>\n        Compiler: <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>compiler<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>TypeScript<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">onkeyup</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>document.getElementById('message').innerText = sayHello()<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>br</span> <span class=\"token punctuation\">/></span></span>\n        Framework: <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>framework<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>ASP.NET<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">onkeyup</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>document.getElementById('message').innerText = sayHello()<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<h2>Test</h2>\n<ol>\n<li>Run the project.</li>\n<li>You should see a message when you type in the input boxes:</li>\n</ol>\n<p><img src=\"../../assets/images/tutorials/aspnet/running-demo.png\" alt=\"Picture of running demo\"></p>\n<h2>Debug</h2>\n<ol>\n<li>In Edge, press F12 and click the <strong>Debugger</strong> tab.</li>\n<li>Look in the first localhost folder, then scripts/app.ts</li>\n<li>Put a breakpoint on the line with <code class=\"language-text\">return</code>.</li>\n<li>Type in the boxes and confirm that the breakpoint hits in TypeScript code and that inspection works correctly.</li>\n</ol>\n<p><img src=\"../../assets/images/tutorials/aspnet/paused-demo.png\" alt=\"Demo paused on breakpoint\"></p>\n<p>That’s all you need to know to include basic TypeScript in your ASP.NET project.\nNext we’ll include Angular and write a simple Angular app.</p>\n<h1>Add Angular 2</h1>\n<h2>Add NPM dependencies</h2>\n<p>Add Angular 2 and SystemJS to <code class=\"language-text\">dependencies</code> in <code class=\"language-text\">package.json</code>.</p>\n<p>For VS2015, the new <code class=\"language-text\">dependencies</code> list:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\">  <span class=\"token property\">\"dependencies\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"angular2\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2.0.0-beta.11\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"systemjs\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0.19.24\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"gulp\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"3.9.0\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"del\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2.2.0\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p>For VS2017, due to the deprecation of peer dependencies in NPM3, we need to list Angular 2’s peer dependencies directly as dependencies as well:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\">  <span class=\"token property\">\"dependencies\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"angular2\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2.0.0-beta.11\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"reflect-metadata\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0.1.2\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"rxjs\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"5.0.0-beta.2\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"zone.js\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"^0.6.4\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"systemjs\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"0.19.24\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"gulp\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"3.9.0\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"del\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"2.2.0\"</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span></code></pre></div>\n<h2>Update tsconfig.json</h2>\n<p>Now that Angular 2 and its dependencies are installed, we need to enable TypeScript’s experimental support for decorators.\nWe also need to add declarations for ES2015, since Angular uses core-js for things like <code class=\"language-text\">Promise</code>.\nIn the future decorators will be the default and these settings will not be needed.</p>\n<p>Add <code class=\"language-text\">&quot;experimentalDecorators&quot;: true, &quot;emitDecoratorMetadata&quot;: true</code> to the <code class=\"language-text\">&quot;compilerOptions&quot;</code> section.\nNext, add <code class=\"language-text\">&quot;lib&quot;: [&quot;es2015&quot;, &quot;es5&quot;, &quot;dom&quot;]</code> to <code class=\"language-text\">&quot;compilerOptions&quot;</code> as well to bring in declarations from ES2015.\nFinally, we’ll need to add a new entry in <code class=\"language-text\">&quot;files&quot;</code> for another file, <code class=\"language-text\">&quot;./model.ts&quot;</code>, which we’ll create.\nOur tsconfig should now look like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"compilerOptions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token property\">\"noImplicitAny\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"noEmitOnError\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"sourceMap\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"experimentalDecorators\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"emitDecoratorMetadata\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"es5\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token property\">\"lib\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n            <span class=\"token string\">\"es2015\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"es5\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"dom\"</span>\n        <span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"files\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n        <span class=\"token string\">\"./app.ts\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"./model.ts\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string\">\"./main.ts\"</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"compileOnSave\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2>Add Angular to the gulp build</h2>\n<p>Finally, we need to make sure that the Angular files are copied as part of the build.\nWe need to add:</p>\n<ol>\n<li>The paths to the library files.</li>\n<li>Add a <code class=\"language-text\">lib</code> task to pipe the files to <code class=\"language-text\">wwwroot</code>.</li>\n<li>Add a dependency on <code class=\"language-text\">lib</code> to the <code class=\"language-text\">default</code> task.</li>\n</ol>\n<p>The updated <code class=\"language-text\">gulpfile.js</code> should look like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"xml\"><pre class=\"language-xml\"><code class=\"language-xml\">/// <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>binding</span> <span class=\"token attr-name\">AfterBuild</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">'</span>default<span class=\"token punctuation\">'</span></span> <span class=\"token attr-name\">Clean</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">'</span>clean<span class=\"token punctuation\">'</span></span> <span class=\"token punctuation\">/></span></span>\n/*\nThis file is the main entry point for defining Gulp tasks and using Gulp plugins.\nClick here to learn more. http://go.microsoft.com/fwlink/?LinkId=518007\n*/\n\nvar gulp = require('gulp');\nvar del = require('del');\n\nvar paths = {\n    scripts: ['scripts/**/*.js', 'scripts/**/*.ts', 'scripts/**/*.map'],\n    libs: ['node_modules/angular2/bundles/angular2.js',\n           'node_modules/angular2/bundles/angular2-polyfills.js',\n           'node_modules/systemjs/dist/system.src.js',\n           'node_modules/rxjs/bundles/Rx.js']\n};\n\ngulp.task('lib', function () {\n    gulp.src(paths.libs).pipe(gulp.dest('wwwroot/scripts/lib'));\n});\n\ngulp.task('clean', function () {\n    return del(['wwwroot/scripts/**/*']);\n});\n\ngulp.task('default', ['lib'], function () {\n    gulp.src(paths.scripts).pipe(gulp.dest('wwwroot/scripts'));\n});</code></pre></div>\n<p>Again, make sure that Task Runner Explorer sees the new <code class=\"language-text\">lib</code> task after you save the gulpfile.</p>\n<h2>Write a simple Angular app in TypeScript</h2>\n<p>First, change the code in <code class=\"language-text\">app.ts</code> to:</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>Component<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"angular2/core\"</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>MyModel<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"./model\"</span>\n\n@<span class=\"token function\">Component</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    selector<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">my-app</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n    template<span class=\"token punctuation\">:</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">&lt;div>Hello from {{getCompiler()}}&lt;/div></span><span class=\"token template-punctuation string\">`</span></span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MyApp</span> <span class=\"token punctuation\">{</span>\n    model <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MyModel</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">getCompiler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>model<span class=\"token punctuation\">.</span>compiler<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Then add another TypeScript file in <code class=\"language-text\">scripts</code> named <code class=\"language-text\">model.ts</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MyModel</span> <span class=\"token punctuation\">{</span>\n    compiler <span class=\"token operator\">=</span> <span class=\"token string\">\"TypeScript\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>And then another TypeScript file in <code class=\"language-text\">scripts</code> named <code class=\"language-text\">main.ts</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"ts\"><pre class=\"language-ts\"><code class=\"language-ts\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>bootstrap<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"angular2/platform/browser\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>MyApp<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"./app\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">bootstrap</span><span class=\"token punctuation\">(</span>MyApp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Finally, change the code in <code class=\"language-text\">index.html</code> to the following:</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token doctype\">&lt;!DOCTYPE html></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>utf-8<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>scripts/lib/angular2-polyfills.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>scripts/lib/system.src.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>scripts/lib/rx.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>scripts/lib/angular2.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">\n    System<span class=\"token punctuation\">.</span><span class=\"token function\">config</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        packages<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token string\">'scripts'</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>\n                format<span class=\"token punctuation\">:</span> <span class=\"token string\">'cjs'</span><span class=\"token punctuation\">,</span>\n                defaultExtension<span class=\"token punctuation\">:</span> <span class=\"token string\">'js'</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    System<span class=\"token punctuation\">.</span><span class=\"token function\">import</span><span class=\"token punctuation\">(</span><span class=\"token string\">'scripts/main'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">,</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>console<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    </span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>my-app</span><span class=\"token punctuation\">></span></span>Loading...<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>my-app</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>This loads the app.\nWhen you run the ASP.NET application you should see a div that says “Loading…” and then updates to say “Hello from TypeScript”.</p>\n<p>{% endraw %}</p>","frontmatter":{"permalink":"/docs/handbook/asp-net-core.html"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/docs/handbook/asp-net-core.html","isOldHandbook":true}}}